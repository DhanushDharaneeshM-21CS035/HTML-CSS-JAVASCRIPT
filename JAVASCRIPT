Comment in Javascript Code:
            -> Comments are lines of code that Javascript will intentionally ignore.
            -> They’re just used to create notes for yourself and others about what the code does
            -> // : makes an in-line comment
            -> Eg : // in-line comment example   : This is inline comment
            -> Eg : /* this is a multiline
                       comment line 1     : This multi-line comment
                       line 2
                       line 3 */
            -> We can have multiple lines in multiline comment.

Data types and variables:
            -> Data is anything that is meaningful to the computer.
            -> Javascript provides seven different data types
            -> Data Types:
                     Undefined, Null, Boolean, String, Symbol, Number, and Object.
            Undefined:
                  -> It is something that hasn’t been defined.
                  -> It may have a variable that haven’t set to be anything yet
            Null:
                -> Null means nothing.
            Boolean:
                -> A boolean means true or false
            Symbol:
                -> A symbol is an immutable primitive value that is unique.
            String:
                -> A string is just any sort of text
            Number:
                -> A number is a number.
            Object:
                -> An object can store a lot of different key value pairs.
            -> Varaibles:
                    -> A variable allows computers to store and manipulate data in a dynamic fashion.
                    -> It’s basically a label to point to the data.
                    -> To declare a variable, one way is to use the var keyword.
                    -> Var stands for variable
                    -> Eg : var myname = "Javascript"   : this is string datatype
                    -> There are actually three ways to declare a variable in Javascript.
                              1) var myname = "Javascript"   : A var is going to be able to be used throughout your whole program.
                              2) let ourname = "JS"   : Let will only be used within the scope of where you declared that.
                              3) const pi = 3.14   : Const is a variable that should never change. It can never change.
                    
Storing Values with Assignment Operator:
                    -> There’s a difference between declaring variables and assigning variables.
                    -> Eg : var a;   : Here it is declaring a variable to be called a.
                            var b = 2;   : Here it is declaring and assigning in one line.
                    -> And then the equals sign is the assignment operator.        
                    -> Eg : a = 7   : we've assigned a to be 7
                            b = a   : now assigned the contents of a to b.

-> console.log(content)  : It allows you to see the content in the console. 

Initializing Variables w/ Assignment Operator:
                        -> var a = 9;   : This ia an example of initializing value and declaring it same time.
                        -> The var a is declaring it. And the a = 9 is initializing it with the assignment operator, which is the = sign.
                        
Uninitialized Variables:
            -> Uninitialized that means their value is undefined.
            -> Eg : var a;   : Uninitialized Variables

Case Sensitivity in Variables:
            -> Variable names and function names in Javascript are case sensitive.
            
-> + : Adding numbers 
   Eg : var sum = 10 + 10;
-> - : Subtracting Numbers
   Eg : var sub = 50 - 10;
-> * : Multiplying Numbers   
   Eg : var mul = 50 * 10;
-> / : Dividing Numbers             
   Eg : var div = 50 / 10;             
-> myVar++; : Incrementing Numbers             
-> myVar--; : Decrementing Numbers
-> var myDecimal = 0.009;  : Decimal Numbers or are sometimes referred to as floating point numbers or floats
-> var product = 2.0 * 2.5; : Multiply Decimals
-> var quotient = 0.0 / 2.0; : Divide Decimals
-> var reminder = 11 % 3; : used to finding a Remainder
-> a += 12; : Compound Assignment with Augmented Addition
-> a -= 10; : Compound Assignment with Augmented Subtraction
-> a *= 10; : Compound Assignment with Augmented Multiplication
-> a /= 10; : Compound Assignment with Augmented Division

Declare String Variables:
            -> If we have some characters surrounded by quotation marks, they can either be single quotation marks, double quotation marks, or backticks then it’s a string.
            -> These are called "String literals”.
            -> Eg : var firstName = "Javascript";
            
Escaping Literal Quotes in Strings:
                 -> \  : This is  escape character
                 -> Eg : var myStr = "I am a \"double quoted\" string inside \"double quotes\"";
                    console.log(myStr);
                    Output : I am a "double quoted" string inside "double quotes"
                    
Quoting String with Single Quotes:
               -> Instead of having string start with double quotes, have can start it with a single quote.
               -> A string can either be surrounded by ‘single quotes’ or “double quotes”
               -> Eg : var myStr = '<a href="http://www.example.com" target="_blank">Link</a>'

-> `...` : backticks  : -> This can be put at the beginning and the end of the string.
                        -> Now with this we can actually use single quotes and double quotes both within the string.
                        
Escape Sequences in Strings:
            -> \'  : single quote
            -> \"  : double quote
            -> \\  : backslash
            -> \n  : newline
            -> \r  : carriage return
            -> \t  : tab
            -> \b  : backspace
            -> \f  : form feed
            
            
            
            
            
            
            
            
            







                
                
